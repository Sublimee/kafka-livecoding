version: '3.9'

services:
  zookeeper-1:
    image: zookeeper:3.8.1
    restart: always
    hostname: zookeeper-1
    ports:
      - "2181:2181"
      - "7070:7070"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper-1:2888:3888;2181 server.2=zookeeper-2:2888:3888;2181 server.3=zookeeper-3:2888:3888;2181
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070 metricsProvider.exportJvmInfo=true"

  zookeeper-2:
    image: zookeeper:3.8.1
    restart: always
    hostname: zookeeper-2
    ports:
      - "2182:2181"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper-1:2888:3888;2181 server.2=zookeeper-2:2888:3888;2181 server.3=zookeeper-3:2888:3888;2181
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070 metricsProvider.exportJvmInfo=true"

  zookeeper-3:
    image: zookeeper:3.8.1
    restart: always
    hostname: zookeeper-3
    ports:
      - "2183:2181"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper-1:2888:3888;2181 server.2=zookeeper-2:2888:3888;2181 server.3=zookeeper-3:2888:3888;2181
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070 metricsProvider.exportJvmInfo=true"

  kafka-1:
    image: kafka_with_jmx_exporter:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "19092:19092"
      - "17071:7071"
      - "11099:1099"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      EXTRA_ARGS: -javaagent:/opt/kafka/libs/jmx_prometheus_javaagent.jar=7071:/opt/kafka/libs/jmx.yml
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-1:9092,OUTSIDE://localhost:19092
      KAFKA_LISTENERS: INSIDE://kafka-1:9092,OUTSIDE://kafka-1:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      JMX_PORT: 1099
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka-2:
    image: kafka_with_jmx_exporter:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "29092:29092"
      - "27071:7071"
      - "21099:1099"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      EXTRA_ARGS: -javaagent:/opt/kafka/libs/jmx_prometheus_javaagent.jar=7071:/opt/kafka/libs/jmx.yml
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-2:9092,OUTSIDE://localhost:29092
      KAFKA_LISTENERS: INSIDE://kafka-2:9092,OUTSIDE://kafka-2:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      JMX_PORT: 1099
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka-3:
    image: kafka_with_jmx_exporter:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "39092:39092"
      - "37071:7071"
      - "31099:1099"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      EXTRA_ARGS: -javaagent:/opt/kafka/libs/jmx_prometheus_javaagent.jar=7071:/opt/kafka/libs/jmx.yml
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-3:9092,OUTSIDE://localhost:39092
      KAFKA_LISTENERS: INSIDE://kafka-3:9092,OUTSIDE://kafka-3:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      JMX_PORT: 1099
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    user: root
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"